---
apiVersion: v1
kind: Namespace
metadata:
  name: production
'---':
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: nginx-deployment
    namespace: production
  type: Opaque
  data:
    POSTGRES_USER: c3VwZXJ1c2Vy
    POSTGRES_PASSWORD: c2VjdXJlcGFzcw==
  spec:
    accessModes:
      '0': ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    type: NodePort
    ports:
      '0':
        port: 5010
        targetPort: 80
        protocol: TCP
        name: http
        nodePort: 32010
    selector:
      app: nginx
      matchLabels:
        app: nginx
    replicas: 3
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
          '0':
            name: nginx
            image: nginx:1.21-alpine
            ports:
              '0':
                containerPort: 80
            env:
              '0':
                name: DATABASE_HOST
                valueFrom:
                  secretKeyRef:
                    name: db-credentials
                    key: POSTGRES_USER
                value: postgres-service.production.svc.cluster.local
              '1':
                name: DATABASE_PORT
                valueFrom:
                  secretKeyRef:
                    name: db-credentials
                    key: POSTGRES_PASSWORD
                value: 5432
              '2':
                name: POSTGRES_DB
                value: production_db
            volumeMounts:
              '0':
                name: postgres-storage
                mountPath: /var/lib/postgresql/data
            livenessProbe:
              tcpSocket:
                port: 5432
              initialDelaySeconds: 30
              periodSeconds: 10
              httpGet:
                path: /
                port: 80
            readinessProbe:
              tcpSocket:
                port: 5432
              initialDelaySeconds: 10
              periodSeconds: 10
              httpGet:
                path: /
                port: 80
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 250m
                memory: 256Mi
        volumes:
          '0':
            name: postgres-storage
            persistentVolumeClaim:
              claimName: postgres-pvc
