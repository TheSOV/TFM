import datetime
from typing import Any
from pydantic import BaseModel, Field
from typing import Literal

class Record(BaseModel):
    """Representation of a single action or milestone achieved by any of the
    DevOps agents.

    Attributes:
        agent: Role of the agent that generated the record. Accepted values are
            'devops_engineer', 'devops_researcher' and 'devops_tester'.
        task_name: Short identifier of the task completed.
        task_description: Human-readable explanation of what was done. It should
            contain enough context so that other agents (or a human) can
            understand what happened without having to dig into the logs.
        created_at: Timestamp recorded as a string in HH:MM:SS format (UTC).
            It is generated by a default factory upon model creation and
            serialized as is.
    """
    agent: Literal['devops_engineer', 'devops_researcher', 'devops_tester'] = Field(
        ..., 
        description="Agent which completed the task"
    )
    task_name: str = Field(
        ...,
        description="Name of the task completed"
    )
    task_description: str = Field(
        ...,
        description="A description of the task completed, with important information which can be used to complete the next tasks or to debug any failure."
    )
    created_at: str = Field(
        default_factory=lambda: datetime.datetime.now(datetime.timezone.utc).strftime("%H:%M:%S"),
        description="Time when the record was created (HH:MM:SS UTC)"
    )